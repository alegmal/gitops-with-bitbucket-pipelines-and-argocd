definitions:
  steps:
  - step: &build-and-push
      name: build and push docker image
      image: node:12.13.1
      services:
        - docker
      script:
        - docker login -u _json_key -p "$GCP_KEY" https://gcr.io
        - echo "building and pushing docker image"
        - docker build -t gcr.io/example:$BITBUCKET_TAG .
        - docker push gcr.io/example:$BITBUCKET_TAG
  - step: &update-helm-chart
      name: update helm chart version
      image: node:12.13.1
      script:
        # install dependancies
        - wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && chmod a+x /usr/bin/yq
        - wget -qO /usr/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && chmod a+x /usr/bin/jq

        # configure and clone repository
        - git config --global user.email "devops@example.com"
        - git config --global user.name "devops"
        - git config --global push.default simple

        # update current repository
        - echo "Updating values.yaml with new Docker image tag"
        - yq eval ".image.tag = \"$BITBUCKET_TAG\"" -i awesome/values.yaml
        - echo "Updating Chart.yaml with new version"
        - yq eval ".version = \"$BITBUCKET_TAG\"" -i awesome/Chart.yaml
        - yq eval ".appVersion = \"$BITBUCKET_TAG\"" -i awesome/Chart.yaml
        - git add --all
        # [skip ci] prevents pipeline triggering
        - git commit -m "Update Docker image tag and Helm chart version to ${BITBUCKET_TAG} [skip ci]"
        - git push

        # update helm charts repository
        - git clone git@bitbucket.org:helm-charts.git
        - cd helm-charts
        - cp -R awesome helm-charts/
        - git add --all
        - git commit -m "Update Docker image tag and Helm chart version to ${BITBUCKET_TAG}"
        - ACCESS_TOKEN=$(curl -s -X POST -u "${CLIENT_ID}:${CLIENT_SECRET}" https://bitbucket.org/site/oauth2/access_token -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')
        - git push https://x-token-auth:"${ACCESS_TOKEN}"@bitbucket.org/xxxxxx/helm-charts.git
pipelines:
  tags:
    v*:
      - step:
          name: check semver
          image: node:12.13.1
          script:
            - SEMVER_REGEX="^v(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))(\.(0|[1-9][0-9]*))?$"
            - if [[ "$BITBUCKET_TAG" =~ $SEMVER_REGEX ]]; then echo "Tag adheres to Semantic Versioning."; else echo "Invalid tag. Please provide a tag that adheres to Semantic Versioning."; exit 1; fi
      - parallel:
        - step: *build-and-push
        - step: *update-helm-chart
  default:
    - step: 
        condition:
          changesets:
            includePaths:
              - "awesome/**"
        name: update helm chart
        image: node:12.13.1
        script:
          # install dependancies
          - wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && chmod a+x /usr/bin/yq
          - wget -qO /usr/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && chmod a+x /usr/bin/jq

          # configure and clone repository
          - git config --global user.email "devops@example.com"
          - git config --global user.name "improve-services"
          - git config --global push.default simple
          - git clone git@bitbucket.org:xxxxx/helm-charts.git

          # update helm
          - cp -R awesome helm-charts/
          - cd helm-charts
          - git add --all

          # commit and push
          - git commit -m "updated helm template configuration to central helm repository"
          # get access token for authentication for push
          - ACCESS_TOKEN=$(curl -s -X POST -u "${AUTH0_CONSUMERS_DTLPY_PIPELINE_CLIENT_ID}:${AUTH0_CONSUMERS_DTLPY_PIPELINE_CLIENT_SECRET}" https://bitbucket.org/site/oauth2/access_token -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')
          - git push https://x-token-auth:"${ACCESS_TOKEN}"@bitbucket.org/example/helm-charts.git